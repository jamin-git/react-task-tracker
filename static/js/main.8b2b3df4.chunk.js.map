{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b2b3df4.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button onClick= {onClick} style={{backgroundColor: color}} \r\n            className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'}\r\n            text={showAdd ? 'Close' : 'Add'} \r\n            onClick={onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ( {task, onDelete, onToggle} ) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? \r\n        'reminder' : ''}`} onDoubleClick={() => \r\n        onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: 'red', \r\n            cursor: 'pointer'}}\r\n            onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ( {tasks, onDelete, onToggle} ) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key = {task.id} task = {task} \r\n                onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const[reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Checking if task text is filled\r\n        if (!text) {\r\n            alert('Please add a Task')\r\n            return\r\n        }\r\n\r\n        // Adding the Event\r\n        onAdd({ text, day, reminder })\r\n        \r\n        // Resetting Form\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task'\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day and Time</label>\r\n                <input type='text' placeholder='Add Day and Time'\r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label> \r\n                <input type='checkbox'\r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)}></input>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task'\r\n            className=\"btn btn-block\"></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 7th at 3:30pm',\n        reminder: false,\n    }\n])\n\n// Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1;\n\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => \n  task.id === id ? { ...task, reminder: \n    !task.reminder } : task))\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !==\n  id))\n}\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete=\n      {deleteTask} onToggle={toggleReminder}/> : \"No Tasks to show\"}\n    </div>\n  );\n}\n\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}